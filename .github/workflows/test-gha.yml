# This is a basic workflow to help you get started with Actions

name: test gha

# Controls when the workflow will run
on:
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: edwardk912/test-gha-scripts
          path: './test_dir'
          
      - name: Checkout scripts repo
        uses: actions/checkout@v4
        with:
          repository: edwardk912/test-gha-scripts
          ref: main
          path: './scripts/main'

      - name: Checkout scripts repo feature
        uses: actions/checkout@v4
        with:
          repository: edwardk912/test-gha-scripts
          ref: feature
          path: './scripts/feature'

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo "LIST=\"$(diff scripts/main scripts/feature)\"" >> $GITHUB_ENV
          # echo "LIST=$(echo "FEATURE: "; ls scripts/feature; echo "MAIN: "; ls scripts/main)" >> $GITHUB_ENV

      - name: Comment
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '${{ env.LIST }}'
            })
          
  # comment:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/github-script@v3
  #       with:
  #         github-token: ${{secrets.GITHUB_TOKEN}}
  #         script: |
  #           github.issues.createComment({
  #             issue_number: context.issue.number,
  #             owner: context.repo.owner,
  #             repo: context.repo.repo,
  #             body: '${{ env.TESTOUTPUT }}'
  #           })
